/**
 *
 * This file is auto-generated. Do not edit manually: changes may be erased.
 * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.
 * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues
 * Aqua version: 0.7.0-285
 *
 */
import { FluencePeer } from '../../index';
import { CallParams } from '../../internal/compilerSupport/v3';
export interface DataProviderDef {
    provide_data: (callParams: CallParams<null>) => number[] | Promise<number[]>;
}
export declare function registerDataProvider(service: DataProviderDef): void;
export declare function registerDataProvider(serviceId: string, service: DataProviderDef): void;
export declare function registerDataProvider(peer: FluencePeer, service: DataProviderDef): void;
export declare function registerDataProvider(peer: FluencePeer, serviceId: string, service: DataProviderDef): void;
export interface SigDef {
    get_pub_key: (callParams: CallParams<null>) => string | Promise<string>;
    sign: (data: number[], callParams: CallParams<'data'>) => {
        error: string | null;
        signature: number[] | null;
        success: boolean;
    } | Promise<{
        error: string | null;
        signature: number[] | null;
        success: boolean;
    }>;
    verify: (signature: number[], data: number[], callParams: CallParams<'signature' | 'data'>) => boolean | Promise<boolean>;
}
export declare function registerSig(service: SigDef): void;
export declare function registerSig(serviceId: string, service: SigDef): void;
export declare function registerSig(peer: FluencePeer, service: SigDef): void;
export declare function registerSig(peer: FluencePeer, serviceId: string, service: SigDef): void;
export declare type CallSigResult = {
    error: string | null;
    signature: number[] | null;
    success: boolean;
};
export declare function callSig(sigId: string, config?: {
    ttl?: number;
}): Promise<CallSigResult>;
export declare function callSig(peer: FluencePeer, sigId: string, config?: {
    ttl?: number;
}): Promise<CallSigResult>;
//# sourceMappingURL=sig-tests.d.ts.map
{"version":3,"file":"KeyPair.spec.js","sourceRoot":"","sources":["../../../src/__test__/unit/KeyPair.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,yCAA6B;AAE7B,kDAAiD;AAEjD,QAAQ,CAAC,eAAe,EAAE;IACtB,EAAE,CAAC,4BAA4B,EAAE;;;;;4BAEd,qBAAM,iBAAO,CAAC,aAAa,EAAE,EAAA;;wBAAtC,MAAM,GAAG,SAA6B;wBACtC,UAAU,GAAG,MAAM,CAAC,mBAAmB,EAAE,CAAC;wBAGhC,qBAAM,iBAAO,CAAC,aAAa,CAAC,UAAU,CAAC,EAAA;;wBAAjD,OAAO,GAAG,SAAuC;wBACjD,WAAW,GAAG,OAAO,CAAC,mBAAmB,EAAE,CAAC;wBAElD,SAAS;wBACT,MAAM,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;;;;;KACjD,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE;;;;;;wBAEpC,MAAM,GAAG,6CAA6C,CAAC;wBACvD,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;wBAGf,qBAAM,iBAAO,CAAC,aAAa,CAAC,EAAE,CAAC,EAAA;;wBAAzC,OAAO,GAAG,SAA+B;wBAGzC,cAAc,GAAG,sDAAsD,CAAC;wBAC9E,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;;;;;KAC5E,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE;;;;;;wBAE9B,SAAS,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;wBAG7B,qBAAM,iBAAO,CAAC,aAAa,CAAC,SAAS,CAAC,EAAA;;wBAAhD,OAAO,GAAG,SAAsC;wBAGhD,cAAc,GAAG,sDAAsD,CAAC;wBAC9E,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;;;;;KAC5E,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import * as bs58 from 'bs58';\nimport * as base64 from 'base64-js';\nimport { KeyPair } from '../../internal/KeyPair';\n\ndescribe('KeyPair tests', () => {\n    it('generate keypair from seed', async function () {\n        // arrange\n        const random = await KeyPair.randomEd25519();\n        const privateKey = random.toEd25519PrivateKey();\n\n        // act\n        const keyPair = await KeyPair.fromEd25519SK(privateKey);\n        const privateKey2 = keyPair.toEd25519PrivateKey();\n\n        // assert\n        expect(privateKey).toStrictEqual(privateKey2);\n    });\n\n    it('create keypair from ed25519 private key', async function () {\n        // arrange\n        const rustSK = 'jDaxLJzYtzgwTMrELJCAqavtmx85ktQNfB2rLcK7MhH';\n        const sk = bs58.decode(rustSK);\n\n        // act\n        const keyPair = await KeyPair.fromEd25519SK(sk);\n\n        // assert\n        const expectedPeerId = '12D3KooWH1W3VznVZ87JH4FwABK4mkntcspTVWJDta6c2xg9Pzbp';\n        expect(keyPair.Libp2pPeerId.toB58String()).toStrictEqual(expectedPeerId);\n    });\n\n    it('create keypair from a seed phrase', async function () {\n        // arrange\n        const seedArray = new Uint8Array(32).fill(1);\n\n        // act\n        const keyPair = await KeyPair.fromEd25519SK(seedArray);\n\n        // assert\n        const expectedPeerId = '12D3KooWK99VoVxNE7XzyBwXEzW7xhK7Gpv85r9F3V3fyKSUKPH5';\n        expect(keyPair.Libp2pPeerId.toB58String()).toStrictEqual(expectedPeerId);\n    });\n});\n"]}
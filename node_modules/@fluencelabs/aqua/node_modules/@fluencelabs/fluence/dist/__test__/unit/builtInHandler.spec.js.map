{"version":3,"file":"builtInHandler.spec.js","sourceRoot":"","sources":["../../../src/__test__/unit/builtInHandler.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { CallParams, CallServiceData } from '../../internal/commonTypes';\nimport each from 'jest-each';\nimport { builtInServices } from '../../internal/builtins/common';\nimport { KeyPair } from '../../internal/KeyPair';\nimport { Sig, defaultSigGuard, allowServiceFn } from '../../internal/builtins/Sig';\nimport { toUint8Array } from 'js-base64';\n\nconst a10b20 = `{\n    \"a\": 10,\n    \"b\": 20\n}`;\n\nconst oneTwoThreeFour = `[\n    1,\n    2,\n    3,\n    4\n]`;\n\ndescribe('Tests for default handler', () => {\n    // prettier-ignore\n    each`\n  serviceId     | fnName               | args                                      | retCode | result\n  ${'op'}       | ${'identity'}        | ${[]}                                     | ${0}    | ${{}}\n  ${'op'}       | ${'identity'}        | ${[1]}                                    | ${0}    | ${1}\n  ${'op'}       | ${'identity'}        | ${[1, 2]}                                 | ${1}    | ${'identity accepts up to 1 arguments, received 2 arguments'}\n     \n  ${'op'}       | ${'noop'}            | ${[1, 2]}                                 | ${0}    | ${{}}\n     \n  ${'op'}       | ${'array'}           | ${[1, 2, 3]}                              | ${0}    | ${[1, 2, 3]}\n  \n  ${'op'}       | ${'array_length'}    | ${[[1, 2, 3]]}                            | ${0}    | ${3}\n  ${'op'}       | ${'array_length'}    | ${[]}                                     | ${1}    | ${'array_length accepts exactly one argument, found: 0'}\n     \n  ${'op'}       | ${'concat'}          | ${[[1, 2], [3, 4], [5, 6]]}               | ${0}    | ${[1, 2, 3, 4, 5, 6]}\n  ${'op'}       | ${'concat'}          | ${[[1, 2]]}                               | ${0}    | ${[1, 2]}\n  ${'op'}       | ${'concat'}          | ${[]}                                     | ${0}    | ${[]}\n  ${'op'}       | ${'concat'}          | ${[1, [1, 2], 1]}                         | ${1}    | ${\"All arguments of 'concat' must be arrays: arguments 0, 2 are not\"}\n     \n  ${'op'}       | ${'string_to_b58'}   | ${[\"test\"]}                               | ${0}    | ${\"3yZe7d\"}\n  ${'op'}       | ${'string_to_b58'}   | ${[\"test\", 1]}                            | ${1}    | ${\"string_to_b58 accepts only one string argument\"}\n     \n  ${'op'}       | ${'string_from_b58'} | ${[\"3yZe7d\"]}                             | ${0}    | ${\"test\"}\n  ${'op'}       | ${'string_from_b58'} | ${[\"3yZe7d\", 1]}                          | ${1}    | ${\"string_from_b58 accepts only one string argument\"}\n     \n  ${'op'}       | ${'bytes_to_b58'}    | ${[[116, 101, 115, 116]]}                 | ${0}    | ${\"3yZe7d\"}\n  ${'op'}       | ${'bytes_to_b58'}    | ${[[116, 101, 115, 116], 1]}              | ${1}    | ${\"bytes_to_b58 accepts only single argument: array of numbers\"}\n     \n  ${'op'}       | ${'bytes_from_b58'}  | ${[\"3yZe7d\"]}                             | ${0}    | ${[116, 101, 115, 116]}\n  ${'op'}       | ${'bytes_from_b58'}  | ${[\"3yZe7d\", 1]}                          | ${1}    | ${\"bytes_from_b58 accepts only one string argument\"}\n\n  ${'op'}       | ${'sha256_string'}   | ${[\"hello, world!\"]}                      | ${0}    | ${\"QmVQ8pg6L1tpoWYeq6dpoWqnzZoSLCh7E96fCFXKvfKD3u\"}\n  ${'op'}       | ${'sha256_string'}   | ${[\"hello, world!\", true]}                | ${0}    | ${\"84V7ZxLW7qKsx1Qvbd63BdGaHxUc3TfT2MBPqAXM7Wyu\"}\n  ${'op'}       | ${'sha256_string'}   | ${[]}                                     | ${1}    | ${\"sha256_string accepts 1-3 arguments, found: 0\"}\n\n  ${'op'}       | ${'concat_strings'}  | ${[]}                                     | ${0}    | ${\"\"}\n  ${'op'}       | ${'concat_strings'}  | ${[\"a\", \"b\", \"c\"]}                        | ${0}    | ${\"abc\"}\n     \n  ${'peer'}     | ${'timeout'}         | ${[200, []]}                              | ${0}    | ${[]}}\n  ${'peer'}     | ${'timeout'}         | ${[200, ['test']]}                        | ${0}    | ${['test']}}\n  ${'peer'}     | ${'timeout'}         | ${[]}                                     | ${1}    | ${'timeout accepts exactly two arguments: timeout duration in ms and a message string'}}\n  ${'peer'}     | ${'timeout'}         | ${[200, 'test', 1]}                       | ${1}    | ${'timeout accepts exactly two arguments: timeout duration in ms and a message string'}}\n\n  ${'debug'}    | ${'stringify'}       | ${[]}                                     | ${0}    | ${'\"<empty argument list>\"'}}\n  ${'debug'}    | ${'stringify'}       | ${[{a: 10, b: 20}]}                       | ${0}    | ${a10b20}}\n  ${'debug'}    | ${'stringify'}       | ${[1, 2, 3, 4]}                           | ${0}    | ${oneTwoThreeFour}}\n  \n  ${'math'}     | ${'add'}\"            | ${[2, 2]}                                 | ${0}    | ${4}\n  ${'math'}     | ${'add'}\"            | ${[2]}                                    | ${1}    | ${\"Expected 2 argument(s). Got 1\"}\n\n  ${'math'}     | ${'sub'}\"            | ${[2, 2]}                                 | ${0}    | ${0}\n  ${'math'}     | ${'sub'}\"            | ${[2, 3]}                                 | ${0}    | ${-1}\n\n  ${'math'}     | ${'mul'}\"            | ${[2, 2]}                                 | ${0}    | ${4}\n  ${'math'}     | ${'mul'}\"            | ${[2, 0]}                                 | ${0}    | ${0}\n  ${'math'}     | ${'mul'}\"            | ${[2, -1]}                                | ${0}    | ${-2}\n\n  ${'math'}     | ${'fmul'}\"           | ${[10, 0.66]}                             | ${0}    | ${6}\n  ${'math'}     | ${'fmul'}\"           | ${[0.5, 0.5]}                             | ${0}    | ${0}\n  ${'math'}     | ${'fmul'}\"           | ${[100.5, 0.5]}                           | ${0}    | ${50}\n\n  ${'math'}     | ${'div'}\"            | ${[2, 2]}                                 | ${0}    | ${1}\n  ${'math'}     | ${'div'}\"            | ${[2, 3]}                                 | ${0}    | ${0}\n  ${'math'}     | ${'div'}\"            | ${[10, 5]}                                | ${0}    | ${2}\n\n  ${'math'}     | ${'rem'}\"            | ${[10, 3]}                                | ${0}    | ${1}\n\n  ${'math'}     | ${'pow'}\"            | ${[2, 2]}                                 | ${0}    | ${4}\n  ${'math'}     | ${'pow'}\"            | ${[2, 0]}                                 | ${0}    | ${1}\n\n  ${'math'}     | ${'log'}\"            | ${[2, 2]}                                 | ${0}    | ${1}\n  ${'math'}     | ${'log'}\"            | ${[2, 4]}                                 | ${0}    | ${2}\n\n  ${'cmp'}      | ${'gt'}\"             | ${[2, 4]}                                 | ${0}    | ${false}\n  ${'cmp'}      | ${'gte'}\"            | ${[2, 4]}                                 | ${0}    | ${false}\n  ${'cmp'}      | ${'gte'}\"            | ${[4, 2]}                                 | ${0}    | ${true}\n  ${'cmp'}      | ${'gte'}\"            | ${[2, 2]}                                 | ${0}    | ${true}\n\n  ${'cmp'}      | ${'lt'}\"             | ${[2, 4]}                                 | ${0}    | ${true}\n  ${'cmp'}      | ${'lte'}\"            | ${[2, 4]}                                 | ${0}    | ${true}\n  ${'cmp'}      | ${'lte'}\"            | ${[4, 2]}                                 | ${0}    | ${false}\n  ${'cmp'}      | ${'lte'}\"            | ${[2, 2]}                                 | ${0}    | ${true}\n\n  ${'cmp'}      | ${'cmp'}\"            | ${[2, 4]}                                 | ${0}    | ${-1}\n  ${'cmp'}      | ${'cmp'}\"            | ${[2, -4]}                                | ${0}    | ${1}\n  ${'cmp'}      | ${'cmp'}\"            | ${[2, 2]}                                 | ${0}    | ${0}\n\n  ${'array'}    | ${'sum'}\"            | ${[[1, 2, 3]]}                            | ${0}    | ${6}\n  ${'array'}    | ${'dedup'}\"          | ${[[\"a\", \"a\", \"b\", \"c\", \"a\", \"b\", \"c\"]]}  | ${0}    | ${[\"a\", \"b\", \"c\"]}\n  ${'array'}    | ${'intersect'}\"      | ${[[\"a\", \"b\", \"c\"], [\"c\", \"b\", \"d\"]]}     | ${0}    | ${[\"b\", \"c\"]}\n  ${'array'}    | ${'diff'}\"           | ${[[\"a\", \"b\", \"c\"], [\"c\", \"b\", \"d\"]]}     | ${0}    | ${[\"a\"]}\n  ${'array'}    | ${'sdiff'}\"          | ${[[\"a\", \"b\", \"c\"], [\"c\", \"b\", \"d\"]]}     | ${0}    | ${[\"a\", \"d\"]}\n\n  `.test(\n        //\n        '$fnName with $args expected retcode: $retCode and result: $result',\n        async ({ serviceId, fnName, args, retCode, result }) => {\n            // arrange\n            const req: CallServiceData = {\n                serviceId: serviceId,\n                fnName: fnName,\n                args: args,\n                tetraplets: [],\n                particleContext: {\n                    particleId: 'some',\n                    initPeerId: 'init peer id',\n                    timestamp: 595951200,\n                    ttl: 595961200,\n                    signature: 'sig',\n                },\n            };\n\n            // act\n            const fn = builtInServices[req.serviceId][req.fnName];\n            const res = await fn(req);\n\n            // assert\n            expect(res).toMatchObject({\n                retCode: retCode,\n                result: result,\n            });\n        },\n    );\n\n    it('should return correct error message for identiy service', async () => {\n        // arrange\n        const req: CallServiceData = {\n            serviceId: 'peer',\n            fnName: 'identify',\n            args: [],\n            tetraplets: [],\n            particleContext: {\n                particleId: 'some',\n                initPeerId: 'init peer id',\n                timestamp: 595951200,\n                ttl: 595961200,\n                signature: 'sig',\n            },\n        };\n\n        // act\n        const fn = builtInServices[req.serviceId][req.fnName];\n        const res = await fn(req);\n\n        // assert\n        expect(res).toMatchObject({\n            retCode: 0,\n            result: {\n                external_addresses: [],\n                node_version: expect.stringContaining('js'),\n                air_version: expect.stringContaining('js'),\n            },\n        });\n    });\n});\n\nconst key = '+cmeYlZKj+MfSa9dpHV+BmLPm6wq4inGlsPlQ1GvtPk=';\n\nconst context = (async () => {\n    const keyBytes = toUint8Array(key);\n    const kp = await KeyPair.fromEd25519SK(keyBytes);\n    const res = {\n        peerKeyPair: kp,\n        peerId: kp.Libp2pPeerId.toB58String(),\n    };\n    return res;\n})();\n\nconst testData = [1, 2, 3, 4, 5, 6, 7, 9, 10];\n\n// signature produced by KeyPair created from key above (`key` variable)\nconst testDataSig = [\n    224, 104, 245, 206, 140, 248, 27, 72, 68, 133, 111, 10, 164, 197, 242, 132, 107, 77, 224, 67, 99, 106, 76, 29, 144,\n    121, 122, 169, 36, 173, 58, 80, 170, 102, 137, 253, 157, 247, 168, 87, 162, 223, 188, 214, 203, 220, 52, 246, 29,\n    86, 77, 71, 224, 248, 16, 213, 254, 75, 78, 239, 243, 222, 241, 15,\n];\n\n// signature produced by KeyPair created from some random KeyPair\nconst testDataWrongSig = [\n    116, 247, 189, 118, 236, 53, 147, 123, 219, 75, 176, 105, 101, 108, 233, 137, 97, 14, 146, 132, 252, 70, 51, 153,\n    237, 167, 156, 150, 36, 90, 229, 108, 166, 231, 255, 137, 8, 246, 125, 0, 213, 150, 83, 196, 237, 221, 131, 159,\n    157, 159, 25, 109, 95, 160, 181, 65, 254, 238, 47, 156, 240, 151, 58, 14,\n];\n\nconst makeTetraplet = (initPeerId: string, serviceId?: string, fnName?: string): CallParams<'data'> => {\n    return {\n        initPeerId: initPeerId,\n        tetraplets: {\n            data: [\n                {\n                    function_name: fnName,\n                    service_id: serviceId,\n                },\n            ],\n        },\n    } as any;\n};\n\ndescribe('Sig service tests', () => {\n    it('sig.sign should create the correct signature', async () => {\n        const ctx = await context;\n        const sig = new Sig(ctx.peerKeyPair);\n\n        const res = await sig.sign(testData, makeTetraplet(ctx.peerId));\n\n        expect(res.success).toBe(true);\n        expect(res.signature).toStrictEqual(testDataSig);\n    });\n\n    it('sig.verify should return true for the correct signature', async () => {\n        const ctx = await context;\n        const sig = new Sig(ctx.peerKeyPair);\n\n        const res = await sig.verify(testDataSig, testData);\n\n        expect(res).toBe(true);\n    });\n\n    it('sig.verify should return false for the incorrect signature', async () => {\n        const ctx = await context;\n        const sig = new Sig(ctx.peerKeyPair);\n\n        const res = await sig.verify(testDataWrongSig, testData);\n\n        expect(res).toBe(false);\n    });\n\n    it('sign-verify call chain should work', async () => {\n        const ctx = await context;\n        const sig = new Sig(ctx.peerKeyPair);\n\n        const signature = await sig.sign(testData, makeTetraplet(ctx.peerId));\n        const res = await sig.verify(signature.signature as number[], testData);\n\n        expect(res).toBe(true);\n    });\n\n    it('sig.sign with defaultSigGuard should work for correct callParams', async () => {\n        const ctx = await context;\n        const sig = new Sig(ctx.peerKeyPair);\n        sig.securityGuard = defaultSigGuard(ctx.peerId);\n\n        const signature = await sig.sign(testData, makeTetraplet(ctx.peerId, 'registry', 'get_route_bytes'));\n\n        await expect(signature).toBeDefined();\n    });\n\n    it('sig.sign with defaultSigGuard should not allow particles initiated from incorrect service', async () => {\n        const ctx = await context;\n        const sig = new Sig(ctx.peerKeyPair);\n        sig.securityGuard = defaultSigGuard(ctx.peerId);\n\n        const res = await sig.sign(testData, makeTetraplet(ctx.peerId, 'other_service', 'other_fn'));\n\n        await expect(res.success).toBe(false);\n        await expect(res.error).toBe('Security guard validation failed');\n    });\n\n    it('sig.sign with defaultSigGuard should not allow particles initiated from other peers', async () => {\n        const ctx = await context;\n        const sig = new Sig(ctx.peerKeyPair);\n        sig.securityGuard = defaultSigGuard(ctx.peerId);\n\n        const res = await sig.sign(\n            testData,\n            makeTetraplet((await KeyPair.randomEd25519()).toB58String(), 'registry', 'get_key_bytes'),\n        );\n\n        await expect(res.success).toBe(false);\n        await expect(res.error).toBe('Security guard validation failed');\n    });\n\n    it('changing securityGuard should work', async () => {\n        const ctx = await context;\n        const sig = new Sig(ctx.peerKeyPair);\n        sig.securityGuard = allowServiceFn('test', 'test');\n\n        const successful1 = await sig.sign(testData, makeTetraplet(ctx.peerId, 'test', 'test'));\n        const unSuccessful1 = await sig.sign(testData, makeTetraplet(ctx.peerId, 'wrong', 'wrong'));\n\n        sig.securityGuard = allowServiceFn('wrong', 'wrong');\n\n        const successful2 = await sig.sign(testData, makeTetraplet(ctx.peerId, 'wrong', 'wrong'));\n        const unSuccessful2 = await sig.sign(testData, makeTetraplet(ctx.peerId, 'test', 'test'));\n\n        expect(successful1.success).toBe(true);\n        expect(successful2.success).toBe(true);\n        expect(unSuccessful1.success).toBe(false);\n        expect(unSuccessful2.success).toBe(false);\n    });\n});\n"]}
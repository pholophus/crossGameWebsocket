{"version":3,"file":"services.js","sourceRoot":"","sources":["../../../src/internal/_aqua/services.ts"],"names":[],"mappings":";;;AASA,wDAA8F;AAuB9F,SAAgB,WAAW;IAAC,cAAY;SAAZ,UAAY,EAAZ,qBAAY,EAAZ,IAAY;QAAZ,yBAAY;;IACpC,IAAA,oBAAe,EAAC,IAAI,EAAE;QAClB,gBAAgB,EAAE,KAAK;QACvB,SAAS,EAAE;YACP,GAAG,EAAE,gBAAgB;YACrB,MAAM,EAAE;gBACJ,WAAW,EAAE;oBACT,GAAG,EAAE,OAAO;oBACZ,MAAM,EAAE;wBACJ,GAAG,EAAE,KAAK;qBACb;oBACD,QAAQ,EAAE;wBACN,GAAG,EAAE,kBAAkB;wBACvB,KAAK,EAAE;4BACH;gCACI,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,QAAQ;6BACjB;yBACJ;qBACJ;iBACJ;gBACD,IAAI,EAAE;oBACF,GAAG,EAAE,OAAO;oBACZ,MAAM,EAAE;wBACJ,GAAG,EAAE,gBAAgB;wBACrB,MAAM,EAAE;4BACJ,IAAI,EAAE;gCACF,GAAG,EAAE,OAAO;gCACZ,IAAI,EAAE;oCACF,GAAG,EAAE,QAAQ;oCACb,IAAI,EAAE,IAAI;iCACb;6BACJ;yBACJ;qBACJ;oBACD,QAAQ,EAAE;wBACN,GAAG,EAAE,kBAAkB;wBACvB,KAAK,EAAE;4BACH;gCACI,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,YAAY;gCAClB,MAAM,EAAE;oCACJ,KAAK,EAAE;wCACH,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE;4CACF,GAAG,EAAE,QAAQ;4CACb,IAAI,EAAE,QAAQ;yCACjB;qCACJ;oCACD,SAAS,EAAE;wCACP,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE;4CACF,GAAG,EAAE,OAAO;4CACZ,IAAI,EAAE;gDACF,GAAG,EAAE,QAAQ;gDACb,IAAI,EAAE,IAAI;6CACb;yCACJ;qCACJ;oCACD,OAAO,EAAE;wCACL,GAAG,EAAE,QAAQ;wCACb,IAAI,EAAE,MAAM;qCACf;iCACJ;6BACJ;yBACJ;qBACJ;iBACJ;gBACD,MAAM,EAAE;oBACJ,GAAG,EAAE,OAAO;oBACZ,MAAM,EAAE;wBACJ,GAAG,EAAE,gBAAgB;wBACrB,MAAM,EAAE;4BACJ,SAAS,EAAE;gCACP,GAAG,EAAE,OAAO;gCACZ,IAAI,EAAE;oCACF,GAAG,EAAE,QAAQ;oCACb,IAAI,EAAE,IAAI;iCACb;6BACJ;4BACD,IAAI,EAAE;gCACF,GAAG,EAAE,OAAO;gCACZ,IAAI,EAAE;oCACF,GAAG,EAAE,QAAQ;oCACb,IAAI,EAAE,IAAI;iCACb;6BACJ;yBACJ;qBACJ;oBACD,QAAQ,EAAE;wBACN,GAAG,EAAE,kBAAkB;wBACvB,KAAK,EAAE;4BACH;gCACI,GAAG,EAAE,QAAQ;gCACb,IAAI,EAAE,MAAM;6BACf;yBACJ;qBACJ;iBACJ;aACJ;SACJ;KACJ,CAAC,CAAC;AACP,CAAC;AAtGD,kCAsGC;AAED,YAAY","sourcesContent":["/**\n *\n * This file is auto-generated. Do not edit manually: changes may be erased.\n * Generated by Aqua compiler: https://github.com/fluencelabs/aqua/.\n * If you find any bugs, please write an issue on GitHub: https://github.com/fluencelabs/aqua/issues\n * Aqua version: 0.7.0-285\n *\n */\nimport { Fluence, FluencePeer } from '../../index';\nimport { CallParams, callFunction, registerService } from '../../internal/compilerSupport/v3';\n\n// Services\n\nexport interface SigDef {\n    get_pub_key: (callParams: CallParams<null>) => string | Promise<string>;\n    sign: (\n        data: number[],\n        callParams: CallParams<'data'>,\n    ) =>\n        | { error: string | null; signature: number[] | null; success: boolean }\n        | Promise<{ error: string | null; signature: number[] | null; success: boolean }>;\n    verify: (\n        signature: number[],\n        data: number[],\n        callParams: CallParams<'signature' | 'data'>,\n    ) => boolean | Promise<boolean>;\n}\nexport function registerSig(service: SigDef): void;\nexport function registerSig(serviceId: string, service: SigDef): void;\nexport function registerSig(peer: FluencePeer, service: SigDef): void;\nexport function registerSig(peer: FluencePeer, serviceId: string, service: SigDef): void;\n\nexport function registerSig(...args: any) {\n    registerService(args, {\n        defaultServiceId: 'sig',\n        functions: {\n            tag: 'labeledProduct',\n            fields: {\n                get_pub_key: {\n                    tag: 'arrow',\n                    domain: {\n                        tag: 'nil',\n                    },\n                    codomain: {\n                        tag: 'unlabeledProduct',\n                        items: [\n                            {\n                                tag: 'scalar',\n                                name: 'string',\n                            },\n                        ],\n                    },\n                },\n                sign: {\n                    tag: 'arrow',\n                    domain: {\n                        tag: 'labeledProduct',\n                        fields: {\n                            data: {\n                                tag: 'array',\n                                type: {\n                                    tag: 'scalar',\n                                    name: 'u8',\n                                },\n                            },\n                        },\n                    },\n                    codomain: {\n                        tag: 'unlabeledProduct',\n                        items: [\n                            {\n                                tag: 'struct',\n                                name: 'SignResult',\n                                fields: {\n                                    error: {\n                                        tag: 'option',\n                                        type: {\n                                            tag: 'scalar',\n                                            name: 'string',\n                                        },\n                                    },\n                                    signature: {\n                                        tag: 'option',\n                                        type: {\n                                            tag: 'array',\n                                            type: {\n                                                tag: 'scalar',\n                                                name: 'u8',\n                                            },\n                                        },\n                                    },\n                                    success: {\n                                        tag: 'scalar',\n                                        name: 'bool',\n                                    },\n                                },\n                            },\n                        ],\n                    },\n                },\n                verify: {\n                    tag: 'arrow',\n                    domain: {\n                        tag: 'labeledProduct',\n                        fields: {\n                            signature: {\n                                tag: 'array',\n                                type: {\n                                    tag: 'scalar',\n                                    name: 'u8',\n                                },\n                            },\n                            data: {\n                                tag: 'array',\n                                type: {\n                                    tag: 'scalar',\n                                    name: 'u8',\n                                },\n                            },\n                        },\n                    },\n                    codomain: {\n                        tag: 'unlabeledProduct',\n                        items: [\n                            {\n                                tag: 'scalar',\n                                name: 'bool',\n                            },\n                        ],\n                    },\n                },\n            },\n        },\n    });\n}\n\n// Functions\n"]}
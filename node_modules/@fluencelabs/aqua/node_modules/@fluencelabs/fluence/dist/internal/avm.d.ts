import { CallResultsArray, InterpreterResult, LogLevel, RunParameters } from '@fluencelabs/avm';
import { FluenceAppService } from '@fluencelabs/marine-js';
/**
 * @deprecated. AVM run through marine-js infrastructure. This type is needed for backward compatibility with the previous API
 */
export declare type AvmRunner = {
    init: (logLevel: LogLevel) => Promise<void>;
    terminate: () => Promise<void>;
    run: (air: string, prevData: Uint8Array, data: Uint8Array, params: RunParameters, callResults: CallResultsArray) => Promise<InterpreterResult>;
};
/**
 * @deprecated. AVM run through marine-js infrastructure. This type is needed for backward compatibility with the previous API
 */
export declare class AVM implements AvmRunner {
    private _fluenceAppService;
    constructor(fluenceAppService: FluenceAppService);
    init(logLevel: LogLevel): Promise<void>;
    terminate(): Promise<void>;
    run(air: string, prevData: Uint8Array, data: Uint8Array, runParams: RunParameters, callResults: CallResultsArray): Promise<InterpreterResult>;
}
//# sourceMappingURL=avm.d.ts.map
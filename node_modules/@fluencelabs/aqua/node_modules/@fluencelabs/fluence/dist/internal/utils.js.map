{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/internal/utils.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2021 Fluence Labs Limited\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport log from 'loglevel';\nimport platform from 'platform';\n\nimport { CallServiceData, CallServiceResult, CallServiceResultType, ResultCodes } from './commonTypes';\nimport { FluencePeer } from './FluencePeer';\nimport { LogLevel } from '@fluencelabs/avm';\nimport { ParticleExecutionStage } from './Particle';\nimport Buffer from './Buffer';\n\nexport const MakeServiceCall =\n    (fn: (args: any[]) => CallServiceResultType) =>\n    (req: CallServiceData): CallServiceResult => ({\n        retCode: ResultCodes.success,\n        result: fn(req.args),\n    });\n\nexport const handleTimeout = (fn: () => void) => (stage: ParticleExecutionStage) => {\n    if (stage.stage === 'expired') {\n        fn();\n    }\n};\nexport const doNothing = (..._args: Array<unknown>) => undefined;\n\n/**\n * Checks the network connection by sending a ping-like request to relay node\n * @param { FluenceClient } peer - The Fluence Client instance.\n */\nexport const checkConnection = async (peer: FluencePeer, ttl?: number): Promise<boolean> => {\n    if (!peer.getStatus().isConnected) {\n        return false;\n    }\n\n    const msg = Math.random().toString(36).substring(7);\n\n    const promise = new Promise<string>((resolve, reject) => {\n        const script = `\n    (xor\n        (seq\n            (call %init_peer_id% (\"load\" \"relay\") [] init_relay)\n            (seq\n                (call %init_peer_id% (\"load\" \"msg\") [] msg)\n                (seq \n                    (call init_relay (\"op\" \"identity\") [msg] result)\n                    (call %init_peer_id% (\"callback\" \"callback\") [result])\n                )\n            )\n        )\n        (seq \n            (call init_relay (\"op\" \"identity\") [])\n            (call %init_peer_id% (\"callback\" \"error\") [%last_error%])\n        )\n    )`;\n        const particle = peer.internals.createNewParticle(script, ttl);\n\n        if (particle instanceof Error) {\n            return reject(particle.message);\n        }\n\n        peer.internals.regHandler.forParticle(\n            particle.id,\n            'load',\n            'relay',\n            MakeServiceCall(() => {\n                return peer.getStatus().relayPeerId;\n            }),\n        );\n\n        peer.internals.regHandler.forParticle(\n            particle.id,\n            'load',\n            'msg',\n            MakeServiceCall(() => {\n                return msg;\n            }),\n        );\n\n        peer.internals.regHandler.forParticle(\n            particle.id,\n            'callback',\n            'callback',\n            MakeServiceCall((args) => {\n                const [val] = args;\n                setTimeout(() => {\n                    resolve(val);\n                }, 0);\n                return {};\n            }),\n        );\n\n        peer.internals.regHandler.forParticle(\n            particle.id,\n            'callback',\n            'error',\n            MakeServiceCall((args) => {\n                const [error] = args;\n                setTimeout(() => {\n                    reject(error);\n                }, 0);\n                return {};\n            }),\n        );\n\n        peer.internals.initiateParticle(\n            particle,\n            handleTimeout(() => {\n                reject('particle timed out');\n            }),\n        );\n    });\n\n    try {\n        const result = await promise;\n        if (result != msg) {\n            log.warn(\"unexpected behavior. 'identity' must return the passed arguments.\");\n        }\n        return true;\n    } catch (e) {\n        log.error('Error on establishing connection: ', e);\n        return false;\n    }\n};\n\nexport function dataToString(data: Uint8Array) {\n    const text = new TextDecoder().decode(Buffer.from(data));\n    // try to treat data as json and pretty-print it\n    try {\n        return JSON.stringify(JSON.parse(text), null, 4);\n    } catch {\n        return text;\n    }\n}\n\nexport function jsonify(obj: unknown) {\n    return JSON.stringify(obj, null, 4);\n}\n\nexport function throwIfNotSupported() {\n    if (platform.name === 'Node.js' && platform.version) {\n        const version = platform.version.split('.').map(Number);\n        const major = version[0];\n        if (major < 16) {\n            throw new Error(\n                'FluenceJS requires node.js version >= \"16.x\"; Detected ' +\n                    platform.description +\n                    ' Please update node.js to version 16 or higher.\\nYou can use https://nvm.sh utility to update node.js version: \"nvm install 17 && nvm use 17 && nvm alias default 17\"',\n            );\n        }\n    }\n}\n\n/**\n * Enum representing the log level used in Aqua VM.\n * Possible values: 'info', 'trace', 'debug', 'info', 'warn', 'error', 'off';\n */\nexport type MarineLoglevel = LogLevel;\n\nexport const marineLogLevelToEnvs = (marineLogLevel: MarineLoglevel | undefined) =>\n    marineLogLevel ? { WASM_LOG: marineLogLevel } : undefined;\n"]}
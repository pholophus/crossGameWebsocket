{"version":3,"file":"copyMarine.js","sourceRoot":"","sources":["../../src/tools/copyMarine.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,0CAAoB;AACpB,8CAAwB;AAExB,IAAM,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEtC,IAAI,CAAC,aAAa,EAAE;IAChB,OAAO,CAAC,GAAG,CAAC,qDAA8C,cAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,6BAA0B,CAAC,CAAC;IACpH,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;CACnB;AAED,IAAI,QAAQ,GAAG,aAAa,CAAC;AAC7B,IAAI,CAAC,cAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;IAC5B,QAAQ,GAAG,cAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,CAAC;CACjD;AAED,SAAe,QAAQ,CAAC,WAAmB,EAAE,QAAgB;;;;;;oBACnD,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;oBAC1C,MAAM,GAAG,cAAI,CAAC,IAAI,CAAC,cAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,CAAC,CAAC;oBACvD,IAAI,GAAG,cAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;oBAE3C,OAAO,CAAC,GAAG,CAAC,kBAAW,QAAQ,CAAE,CAAC,CAAC;oBACnC,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;oBAC9B,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;oBAC1B,qBAAM,YAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,EAAA;;oBAAxC,SAAwC,CAAC;;;;;CAC5C;AAED,SAAe,IAAI;;;;;oBACf,OAAO,CAAC,GAAG,CAAC,2BAA2B,EAAE,QAAQ,CAAC,CAAC;oBACnD,qBAAM,YAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAA;;oBAAtD,SAAsD,CAAC;oBAEvD,qBAAM,OAAO,CAAC,GAAG,CAAC;4BACd,QAAQ,CAAC,wBAAwB,EAAE,kBAAkB,CAAC;4BACtD,QAAQ,CAAC,wBAAwB,EAAE,gBAAgB,CAAC;4BACpD,QAAQ,CAAC,kBAAkB,EAAE,UAAU,CAAC;yBAC3C,CAAC,EAAA;;oBAJF,SAIE,CAAC;;;;;CACN;AAED,IAAI,EAAE;KACD,IAAI,CAAC;IACF,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;AACzB,CAAC,CAAC;KACD,KAAK,CAAC,UAAC,GAAG;IACP,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;AAChD,CAAC,CAAC,CAAC","sourcesContent":["#! /usr/bin/env node\n\nimport fs from 'fs';\nimport path from 'path';\n\nconst firstArgument = process.argv[2];\n\nif (!firstArgument) {\n    console.log(`Expected exactly 1 argument, got 0. Usage: ${path.basename(process.argv[1])} <destination directory>`);\n    process.exit(1);\n}\n\nlet destPath = firstArgument;\nif (!path.isAbsolute(destPath)) {\n    destPath = path.join(process.cwd(), destPath);\n}\n\nasync function copyFile(packageName: string, fileName: string) {\n    const modulePath = require.resolve(packageName);\n    const source = path.join(path.dirname(modulePath), fileName);\n    const dest = path.join(destPath, fileName);\n\n    console.log(`copying ${fileName}`);\n    console.log('from: ', source);\n    console.log('to: ', dest);\n    await fs.promises.copyFile(source, dest);\n}\n\nasync function main() {\n    console.log('ensure directory exists: ', destPath);\n    await fs.promises.mkdir(destPath, { recursive: true });\n\n    await Promise.all([\n        copyFile('@fluencelabs/marine-js', 'marine-js.web.js'),\n        copyFile('@fluencelabs/marine-js', 'marine-js.wasm'),\n        copyFile('@fluencelabs/avm', 'avm.wasm'),\n    ]);\n}\n\nmain()\n    .then(() => {\n        console.log('done!');\n    })\n    .catch((err) => {\n        console.error('Something went wrong!', err);\n    });\n"]}
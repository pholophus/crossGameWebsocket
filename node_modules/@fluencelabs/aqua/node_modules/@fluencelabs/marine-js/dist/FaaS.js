"use strict";
/*
 * Copyright 2022 Fluence Labs Limited
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FaaS = void 0;
var wasi_1 = require("@wasmer/wasi");
var browser_1 = __importDefault(require("@wasmer/wasi/lib/bindings/browser"));
var wasmfs_1 = require("@wasmer/wasmfs");
var marine_js_1 = require("./marine_js");
var cachegetUint8Memory0 = null;
function getUint8Memory0(wasm) {
    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {
        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);
    }
    return cachegetUint8Memory0;
}
function getStringFromWasm0(wasm, ptr, len) {
    return decoder.decode(getUint8Memory0(wasm).subarray(ptr, ptr + len));
}
var LEVEL_ERROR = 1;
var LEVEL_WARN = 2;
var LEVEL_INFO = 3;
var LEVEL_TRACE = 4;
var LEVEL_DEBUG = 5;
var decoder = new TextDecoder();
var FaaS = /** @class */ (function () {
    function FaaS(controlModule, serviceModule, serviceId, faaSConfig, env) {
        this._env = {};
        this._marineInstance = 'not-set';
        this._controlModule = controlModule;
        this._serviceModule = serviceModule;
        this._serviceId = serviceId;
        this._env = __assign({ WASM_LOG: 'off' }, env);
    }
    FaaS.prototype.init = function () {
        return __awaiter(this, void 0, void 0, function () {
            var wasi, cfg, wasiImports, serviceInstance, controlModuleInstance, customSections, itCustomSections, rawResult, result;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        wasi = new wasi_1.WASI({
                            args: [],
                            env: this._env,
                            bindings: __assign(__assign({}, browser_1.default), { fs: new wasmfs_1.WasmFs().fs }),
                        });
                        cfg = {
                            exports: undefined,
                        };
                        wasiImports = hasWasiImports(this._serviceModule) ? wasi.getImports(this._serviceModule) : {};
                        return [4 /*yield*/, WebAssembly.instantiate(this._serviceModule, __assign(__assign({}, wasiImports), { host: {
                                    log_utf8_string: function (level, target, offset, size) {
                                        var wasm = cfg.exports;
                                        var message = getStringFromWasm0(wasm, offset, size);
                                        var str = "[marine service \"".concat(_this._serviceId, "\"]: ").concat(message);
                                        if (level <= LEVEL_ERROR) {
                                            console.error(str);
                                        }
                                        else if (level === LEVEL_WARN) {
                                            console.warn(str);
                                        }
                                        else if (level === LEVEL_INFO) {
                                            console.info(str);
                                        }
                                        else if (level === LEVEL_TRACE) {
                                            console.log(str);
                                        }
                                        else if (level >= LEVEL_DEBUG) {
                                            console.log(str);
                                        }
                                    },
                                } }))];
                    case 1:
                        serviceInstance = _a.sent();
                        wasi.start(serviceInstance);
                        cfg.exports = serviceInstance.exports;
                        return [4 /*yield*/, (0, marine_js_1.init)(this._controlModule)];
                    case 2:
                        controlModuleInstance = _a.sent();
                        customSections = WebAssembly.Module.customSections(this._serviceModule, 'interface-types');
                        itCustomSections = new Uint8Array(customSections[0]);
                        rawResult = controlModuleInstance.register_module(this._serviceId, itCustomSections, serviceInstance);
                        try {
                            result = JSON.parse(rawResult);
                            this._marineInstance = controlModuleInstance;
                            return [2 /*return*/, result];
                        }
                        catch (ex) {
                            throw 'register_module result parsing error: ' + ex + ', original text: ' + rawResult;
                        }
                        return [2 /*return*/];
                }
            });
        });
    };
    FaaS.prototype.terminate = function () {
        this._marineInstance = 'not-set';
    };
    FaaS.prototype.call = function (function_name, args, callParams) {
        if (this._marineInstance === 'not-set') {
            throw new Error('Not initialized');
        }
        if (this._marineInstance === 'terminated') {
            throw new Error('Terminated');
        }
        return this._marineInstance.call_module(this._serviceId, function_name, args);
    };
    return FaaS;
}());
exports.FaaS = FaaS;
function hasWasiImports(module) {
    var imports = WebAssembly.Module.imports(module);
    var firstWasiImport = imports.find(function (x) {
        return x.module === 'wasi_snapshot_preview1' || x.module === 'wasi_unstable';
    });
    return firstWasiImport !== undefined;
}
//# sourceMappingURL=FaaS.js.map
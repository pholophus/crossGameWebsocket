"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
var path_1 = __importDefault(require("path"));
var FaaS_1 = require("../FaaS");
var examplesDir = path_1.default.join(__dirname, '../../../../examples');
var loadWasmModule = function (waspPath) { return __awaiter(void 0, void 0, void 0, function () {
    var fullPath, buffer, module;
    return __generator(this, function (_a) {
        switch (_a.label) {
            case 0:
                fullPath = path_1.default.join(waspPath);
                return [4 /*yield*/, fs_1.default.promises.readFile(fullPath)];
            case 1:
                buffer = _a.sent();
                return [4 /*yield*/, WebAssembly.compile(buffer)];
            case 2:
                module = _a.sent();
                return [2 /*return*/, module];
        }
    });
}); };
describe.each([
    // force column layout
    ['error', 'error'],
    ['warn', 'warn'],
    ['info', 'info'],
    ['debug', 'log'],
    ['trace', 'log'],
])('WASM logging tests', function (level, fn) {
    it('Testing logging level', function () { return __awaiter(void 0, void 0, void 0, function () {
        var marine, greeting, faas, res;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    // arrange
                    // @ts-ignore
                    console[fn] = jest.fn();
                    return [4 /*yield*/, loadWasmModule(path_1.default.join(__dirname, '../../dist/marine-js.wasm'))];
                case 1:
                    marine = _a.sent();
                    return [4 /*yield*/, loadWasmModule(path_1.default.join(examplesDir, './greeting_record/artifacts/greeting-record.wasm'))];
                case 2:
                    greeting = _a.sent();
                    faas = new FaaS_1.FaaS(marine, greeting, 'srv', undefined, { WASM_LOG: level });
                    return [4 /*yield*/, faas.init()];
                case 3:
                    _a.sent();
                    res = JSON.parse(faas.call('log_' + level, '{}', undefined));
                    // assert
                    expect(res.error).toBe('');
                    // @ts-ignore
                    expect(console[fn]).toBeCalledTimes(1);
                    // @ts-ignore
                    expect(console[fn]).toHaveBeenNthCalledWith(1, '[marine service "srv"]: ' + level);
                    return [2 /*return*/];
            }
        });
    }); });
});
describe.each([
    // force column layout
    [undefined],
    [{ WASM_LOG: 'off' }],
])('WASM logging tests for level "off"', function (env) {
    it('Testing logging level by passing env: %0', function () { return __awaiter(void 0, void 0, void 0, function () {
        var marine, greeting, faas, res1, res2, res3, res4, res5;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    // arrange
                    console.error = jest.fn();
                    console.warn = jest.fn();
                    console.debug = jest.fn();
                    console.trace = jest.fn();
                    console.info = jest.fn();
                    console.log = jest.fn();
                    return [4 /*yield*/, loadWasmModule(path_1.default.join(__dirname, '../../dist/marine-js.wasm'))];
                case 1:
                    marine = _a.sent();
                    return [4 /*yield*/, loadWasmModule(path_1.default.join(examplesDir, './greeting_record/artifacts/greeting-record.wasm'))];
                case 2:
                    greeting = _a.sent();
                    faas = new FaaS_1.FaaS(marine, greeting, 'srv', undefined, env);
                    return [4 /*yield*/, faas.init()];
                case 3:
                    _a.sent();
                    res1 = JSON.parse(faas.call('log_error', '{}', undefined));
                    res2 = JSON.parse(faas.call('log_warn', '{}', undefined));
                    res3 = JSON.parse(faas.call('log_info', '{}', undefined));
                    res4 = JSON.parse(faas.call('log_debug', '{}', undefined));
                    res5 = JSON.parse(faas.call('log_trace', '{}', undefined));
                    // assert
                    expect(res1.error).toBe('');
                    expect(res2.error).toBe('');
                    expect(res3.error).toBe('');
                    expect(res4.error).toBe('');
                    expect(res5.error).toBe('');
                    expect(console.error).toBeCalledTimes(0);
                    expect(console.warn).toBeCalledTimes(0);
                    expect(console.debug).toBeCalledTimes(0);
                    expect(console.trace).toBeCalledTimes(0);
                    expect(console.info).toBeCalledTimes(0);
                    expect(console.log).toBeCalledTimes(0);
                    return [2 /*return*/];
            }
        });
    }); });
});
//# sourceMappingURL=logging.spec.js.map
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.call_info = exports.registerGreetingRecord = void 0;
var v3_1 = require("../../internal/compilerSupport/v3");
function registerGreetingRecord() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    (0, v3_1.registerService)(args, {
        functions: {
            tag: 'labeledProduct',
            fields: {
                greeting_record: {
                    tag: 'arrow',
                    domain: {
                        tag: 'nil',
                    },
                    codomain: {
                        tag: 'unlabeledProduct',
                        items: [
                            {
                                tag: 'struct',
                                name: 'GreetingRecord',
                                fields: {
                                    num: {
                                        tag: 'scalar',
                                        name: 'i32',
                                    },
                                    str: {
                                        tag: 'scalar',
                                        name: 'string',
                                    },
                                },
                            },
                        ],
                    },
                },
                log_debug: {
                    tag: 'arrow',
                    domain: {
                        tag: 'nil',
                    },
                    codomain: {
                        tag: 'nil',
                    },
                },
                log_error: {
                    tag: 'arrow',
                    domain: {
                        tag: 'nil',
                    },
                    codomain: {
                        tag: 'nil',
                    },
                },
                log_info: {
                    tag: 'arrow',
                    domain: {
                        tag: 'nil',
                    },
                    codomain: {
                        tag: 'nil',
                    },
                },
                log_trace: {
                    tag: 'arrow',
                    domain: {
                        tag: 'nil',
                    },
                    codomain: {
                        tag: 'nil',
                    },
                },
                log_warn: {
                    tag: 'arrow',
                    domain: {
                        tag: 'nil',
                    },
                    codomain: {
                        tag: 'nil',
                    },
                },
                void_fn: {
                    tag: 'arrow',
                    domain: {
                        tag: 'nil',
                    },
                    codomain: {
                        tag: 'nil',
                    },
                },
            },
        },
    });
}
exports.registerGreetingRecord = registerGreetingRecord;
function call_info() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
    }
    var script = "\n                    (xor\n                     (seq\n                      (seq\n                       (call %init_peer_id% (\"getDataSrv\" \"-relay-\") [] -relay-)\n                       (call %init_peer_id% (\"getDataSrv\" \"srvId\") [] srvId)\n                      )\n                      (call %init_peer_id% (srvId \"log_info\") [])\n                     )\n                     (call %init_peer_id% (\"errorHandlingSrv\" \"error\") [%last_error% 1])\n                    )\n    ";
    return (0, v3_1.callFunction)(args, {
        functionName: 'call_info',
        arrow: {
            tag: 'arrow',
            domain: {
                tag: 'labeledProduct',
                fields: {
                    srvId: {
                        tag: 'scalar',
                        name: 'string',
                    },
                },
            },
            codomain: {
                tag: 'nil',
            },
        },
        names: {
            relay: '-relay-',
            getDataSrv: 'getDataSrv',
            callbackSrv: 'callbackSrv',
            responseSrv: 'callbackSrv',
            responseFnName: 'response',
            errorHandlingSrv: 'errorHandlingSrv',
            errorFnName: 'error',
        },
    }, script);
}
exports.call_info = call_info;
//# sourceMappingURL=marine-js-logging.js.map
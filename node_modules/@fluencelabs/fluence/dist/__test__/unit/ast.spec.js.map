{"version":3,"file":"ast.spec.js","sourceRoot":"","sources":["../../../src/__test__/unit/ast.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAsC;AAEtC,QAAQ,CAAC,iBAAiB,EAAE;IACxB,SAAS,CAAC;;;wBACN,qBAAM,eAAO,CAAC,KAAK,EAAE,EAAA;;oBAArB,SAAqB,CAAC;;;;SACzB,CAAC,CAAC;IAEH,QAAQ,CAAC;;;wBACL,qBAAM,eAAO,CAAC,IAAI,EAAE,EAAA;;oBAApB,SAAoB,CAAC;;;;SACxB,CAAC,CAAC;IAEH,EAAE,CAAC,wCAAwC,EAAE;;;;;;wBACnC,IAAI,GAAG,eAAO,CAAC,OAAO,EAAE,CAAC;wBACzB,GAAG,GAAG,QAAQ,CAAC;wBACT,qBAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAA;;wBAAxC,GAAG,GAAG,SAAkC;wBAE9C,MAAM,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC;4BACtB,OAAO,EAAE,IAAI;4BACb,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;yBACvB,CAAC,CAAC;;;;;KACN,CAAC,CAAC;IAEH,EAAE,CAAC,oDAAoD,EAAE;;;;;;wBAC/C,IAAI,GAAG,eAAO,CAAC,OAAO,EAAE,CAAC;wBACzB,GAAG,GAAG,OAAO,CAAC;wBACR,qBAAM,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAA;;wBAAxC,GAAG,GAAG,SAAkC;wBAE9C,MAAM,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC;4BACtB,OAAO,EAAE,KAAK;4BACd,IAAI,EAAE,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC;yBACzC,CAAC,CAAC;;;;;KACN,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","sourcesContent":["import { Fluence } from '../../index';\n\ndescribe('Parse ast tests', () => {\n    beforeAll(async () => {\n        await Fluence.start();\n    });\n\n    afterAll(async () => {\n        await Fluence.stop();\n    });\n\n    it('Correct ast should be parsed correctly', async function () {\n        const peer = Fluence.getPeer();\n        const air = `(null)`;\n        const res = await peer.internals.parseAst(air);\n\n        expect(res).toStrictEqual({\n            success: true,\n            data: { Null: null },\n        });\n    });\n\n    it('Incorrect ast should result in corresponding error', async function () {\n        const peer = Fluence.getPeer();\n        const air = `(null`;\n        const res = await peer.internals.parseAst(air);\n\n        expect(res).toStrictEqual({\n            success: false,\n            data: expect.stringContaining('error'),\n        });\n    });\n});\n"]}
"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var jest_each_1 = __importDefault(require("jest-each"));
var __1 = require("../../..");
var v2_1 = require("../../../internal/compilerSupport/v2");
var peer = new __1.FluencePeer();
var cfg = { ttl: 1000 };
describe('Compiler support tests', function () {
    (0, jest_each_1.default)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n    rawArgs              | numArgs | expectedArgs   | expectedConfig  | isExpectedPeerDefault\n    ", "                | ", "    | ", "          | ", "    | ", "\n    ", "             | ", "    | ", "          | ", "          | ", "\n    ", "            | ", "    | ", "          | ", "    | ", "\n    ", "       | ", "    | ", "          | ", "          | ", "\n    ", "             | ", "    | ", "       | ", "    | ", "\n    ", "        | ", "    | ", "       | ", "          | ", "\n    ", "       | ", "    | ", "       | ", "    | ", "\n    ", "  | ", "    | ", "       | ", "          | ", "\n"], ["\n    rawArgs              | numArgs | expectedArgs   | expectedConfig  | isExpectedPeerDefault\n    ", "                | ", "    | ", "          | ", "    | ", "\n    ", "             | ", "    | ", "          | ", "          | ", "\n    ", "            | ", "    | ", "          | ", "    | ", "\n    ", "       | ", "    | ", "          | ", "          | ", "\n    ", "             | ", "    | ", "       | ", "    | ", "\n    ", "        | ", "    | ", "       | ", "          | ", "\n    ", "       | ", "    | ", "       | ", "    | ", "\n    ", "  | ", "    | ", "       | ", "          | ", "\n"])), [], 0, [], undefined, true, [cfg], 0, [], cfg, true, [peer], 0, [], undefined, false, [peer, cfg], 0, [], cfg, false, ['a'], 1, ['a'], undefined, true, ['a', cfg], 1, ['a'], cfg, true, [peer, 'a'], 1, ['a'], undefined, false, [peer, 'a', cfg], 1, ['a'], cfg, false).test(
    //
    'raw rawArgs: $rawArgs, numArgs: $numArgs. expected args: $expectedArgs, config: $expectedConfig, default peer?: $isExpectedPeerDefault', function (_a) {
        var rawArgs = _a.rawArgs, numArgs = _a.numArgs, expectedArgs = _a.expectedArgs, expectedConfig = _a.expectedConfig, isExpectedPeerDefault = _a.isExpectedPeerDefault;
        // arrange
        var testFn = v2_1.forTests.extractFunctionArgs;
        // act
        var _b = testFn(rawArgs, numArgs), peer = _b.peer, config = _b.config, args = _b.args;
        var isActualPeerDefault = __1.Fluence.getPeer() === peer;
        // assert
        expect(config).toStrictEqual(expectedConfig);
        expect(args).toStrictEqual(expectedArgs);
        expect(isActualPeerDefault).toStrictEqual(isExpectedPeerDefault);
    });
});
var templateObject_1;
//# sourceMappingURL=v2.spec.js.map
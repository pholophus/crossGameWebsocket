{"version":3,"file":"callFunction.js","sourceRoot":"","sources":["../../../../src/internal/compilerSupport/v3impl/callFunction.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,iDAAgD;AAChD,wCAAyC;AAEzC,uCASoB;AAEpB;;;;;;;GAOG;AACH,SAAgB,YAAY,CAAC,SAAqB,EAAE,GAAoB,EAAE,MAAc;IACpF,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,KAAK,gBAAgB,EAAE;QAC3C,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;KAC3C;IAED,IAAM,aAAa,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC9D,IAAM,yBAAyB,GAAG,aAAa,CAAC,MAAM,CAAC;IACjD,IAAA,KAAyB,WAAW,CAAC,SAAS,EAAE,yBAAyB,CAAC,EAAxE,IAAI,UAAA,EAAE,IAAI,UAAA,EAAE,MAAM,YAAsD,CAAC;IAEjF,IAAI,IAAI,CAAC,MAAM,KAAK,yBAAyB,EAAE;QAC3C,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;KACrF;IAED,IAAM,OAAO,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;QACxC,IAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,GAAG,CAAC,CAAC;QAEvE,IAAI,QAAQ,YAAY,KAAK,EAAE;YAC3B,OAAO,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SACnC;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,yBAAyB,EAAE,CAAC,EAAE,EAAE;YAC1C,IAAA,KAAA,OAAe,aAAa,CAAC,CAAC,CAAC,IAAA,EAA9B,MAAI,QAAA,EAAE,IAAI,QAAoB,CAAC;YACtC,IAAI,OAAO,SAAoB,CAAC;YAChC,IAAI,IAAI,CAAC,GAAG,KAAK,OAAO,EAAE;gBACtB,OAAO,GAAG,IAAA,6BAAkB,EAAC,GAAG,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC,MAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC9E;iBAAM;gBACH,OAAO,GAAG,IAAA,6BAAkB,EAAC,GAAG,CAAC,KAAK,CAAC,UAAU,EAAE,MAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAC3E;YACD,IAAA,uCAA4B,EAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;SACzD;QAED,IAAA,uCAA4B,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAA,0BAAe,EAAC,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC;QAE5E,IAAA,uCAA4B,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAA,6BAAkB,EAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;QAE5E,IAAA,uCAA4B,EAAC,IAAI,EAAE,QAAQ,EAAE,IAAA,+BAAoB,EAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;QAEhF,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,QAAQ,EAAE,UAAC,KAAK;YAC5C,kFAAkF;YAClF,yDAAyD;YACzD,+HAA+H;YAC/H,IAAI,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,KAAK,MAAM,IAAI,KAAK,CAAC,KAAK,KAAK,eAAe,CAAC,EAAE;gBACtF,OAAO,CAAC,SAAS,CAAC,CAAC;aACtB;YAED,IAAI,KAAK,CAAC,KAAK,KAAK,cAAc,EAAE;gBAChC,MAAM,CAAC,sCAA+B,GAAG,CAAC,YAAY,4CAAkC,QAAQ,CAAC,EAAE,MAAG,CAAC,CAAC;aAC3G;YAED,IAAI,KAAK,CAAC,KAAK,KAAK,SAAS,EAAE;gBAC3B,MAAM,CAAC,kCAA2B,QAAQ,CAAC,GAAG,kBAAQ,GAAG,CAAC,YAAY,4BAAkB,QAAQ,CAAC,EAAE,MAAG,CAAC,CAAC;aAC3G;YAED,IAAI,KAAK,CAAC,KAAK,KAAK,kBAAkB,EAAE;gBACpC,MAAM,CACF,2CAAoC,GAAG,CAAC,YAAY,eAAK,KAAK,CAAC,YAAY,6BAAmB,QAAQ,CAAC,EAAE,MAAG,CAC/G,CAAC;aACL;QACL,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC;IAEH,OAAO,OAAO,CAAC;AACnB,CAAC;AA9DD,oCA8DC;AAED,IAAM,gBAAgB,GAAG,UAAC,GAAoB;IAC1C,IAAI,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,KAAK,EAAE;QAClC,OAAO,IAAI,CAAC;KACf;IAED,OAAO,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC;AAChD,CAAC,CAAC;AAEF;;;;;;;;;GASG;AACH,IAAM,WAAW,GAAG,UAChB,IAAW,EACX,oBAA4B;IAM5B,IAAI,IAAiB,CAAC;IACtB,IAAI,cAAqB,CAAC;IAC1B,IAAI,MAAW,CAAC;IAChB,IAAI,yBAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;QACjC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACf,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,oBAAoB,GAAG,CAAC,CAAC,CAAC;QACzD,MAAM,GAAG,IAAI,CAAC,oBAAoB,GAAG,CAAC,CAAC,CAAC;KAC3C;SAAM;QACH,IAAI,GAAG,eAAO,CAAC,OAAO,EAAE,CAAC;QACzB,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,oBAAoB,CAAC,CAAC;QACrD,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC;KACvC;IAED,OAAO;QACH,IAAI,EAAE,IAAI;QACV,MAAM,EAAE,MAAM;QACd,IAAI,EAAE,cAAc;KACvB,CAAC;AACN,CAAC,CAAC","sourcesContent":["import { FnConfig, FunctionCallDef } from './interface';\nimport { FluencePeer } from '../../FluencePeer';\nimport { Fluence } from '../../../index';\nimport { Particle } from '../../Particle';\nimport {\n    injectRelayService,\n    argToServiceDef,\n    registerParticleScopeService,\n    responseService,\n    errorHandlingService,\n    ServiceDescription,\n    userHandlerService,\n    injectValueService,\n} from './services';\n\n/**\n * Convenience function to support Aqua `func` generation backend\n * The compiler only need to generate a call the function and provide the corresponding definitions and the air script\n *\n * @param rawFnArgs - raw arguments passed by user to the generated function\n * @param def - function definition generated by the Aqua compiler\n * @param script - air script with function execution logic generated by the Aqua compiler\n */\nexport function callFunction(rawFnArgs: Array<any>, def: FunctionCallDef, script: string) {\n    if (def.arrow.domain.tag !== 'labeledProduct') {\n        throw new Error('Should be impossible');\n    }\n\n    const argumentTypes = Object.entries(def.arrow.domain.fields);\n    const expectedNumberOfArguments = argumentTypes.length;\n    const { args, peer, config } = extractArgs(rawFnArgs, expectedNumberOfArguments);\n\n    if (args.length !== expectedNumberOfArguments) {\n        throw new Error('Incorrect number of arguments. Expecting ${def.argDefs.length}');\n    }\n\n    const promise = new Promise((resolve, reject) => {\n        const particle = peer.internals.createNewParticle(script, config?.ttl);\n\n        if (particle instanceof Error) {\n            return reject(particle.message);\n        }\n\n        for (let i = 0; i < expectedNumberOfArguments; i++) {\n            const [name, type] = argumentTypes[i];\n            let service: ServiceDescription;\n            if (type.tag === 'arrow') {\n                service = userHandlerService(def.names.callbackSrv, [name, type], args[i]);\n            } else {\n                service = injectValueService(def.names.getDataSrv, name, type, args[i]);\n            }\n            registerParticleScopeService(peer, particle, service);\n        }\n\n        registerParticleScopeService(peer, particle, responseService(def, resolve));\n\n        registerParticleScopeService(peer, particle, injectRelayService(def, peer));\n\n        registerParticleScopeService(peer, particle, errorHandlingService(def, reject));\n\n        peer.internals.initiateParticle(particle, (stage) => {\n            // If function is void, then it's completed when one of the two conditions is met:\n            //  1. The particle is sent to the network (state 'sent')\n            //  2. All CallRequests are executed, e.g., all variable loading and local function calls are completed (state 'localWorkDone')\n            if (isReturnTypeVoid(def) && (stage.stage === 'sent' || stage.stage === 'localWorkDone')) {\n                resolve(undefined);\n            }\n\n            if (stage.stage === 'sendingError') {\n                reject(`Could not send particle for ${def.functionName}: not connected  (particle id: ${particle.id})`);\n            }\n\n            if (stage.stage === 'expired') {\n                reject(`Request timed out after ${particle.ttl} for ${def.functionName} (particle id: ${particle.id})`);\n            }\n\n            if (stage.stage === 'interpreterError') {\n                reject(\n                    `Script interpretation failed for ${def.functionName}: ${stage.errorMessage}  (particle id: ${particle.id})`,\n                );\n            }\n        });\n    });\n\n    return promise;\n}\n\nconst isReturnTypeVoid = (def: FunctionCallDef) => {\n    if (def.arrow.codomain.tag === 'nil') {\n        return true;\n    }\n\n    return def.arrow.codomain.items.length == 0;\n};\n\n/**\n * Arguments could be passed in one these configurations:\n * [...actualArgs]\n * [peer, ...actualArgs]\n * [...actualArgs, config]\n * [peer, ...actualArgs, config]\n *\n * This function select the appropriate configuration and returns\n * arguments in a structured way of: { peer, config, args }\n */\nconst extractArgs = (\n    args: any[],\n    numberOfExpectedArgs: number,\n): {\n    peer: FluencePeer;\n    config?: FnConfig;\n    args: any[];\n} => {\n    let peer: FluencePeer;\n    let structuredArgs: any[];\n    let config: any;\n    if (FluencePeer.isInstance(args[0])) {\n        peer = args[0];\n        structuredArgs = args.slice(1, numberOfExpectedArgs + 1);\n        config = args[numberOfExpectedArgs + 1];\n    } else {\n        peer = Fluence.getPeer();\n        structuredArgs = args.slice(0, numberOfExpectedArgs);\n        config = args[numberOfExpectedArgs];\n    }\n\n    return {\n        peer: peer,\n        config: config,\n        args: structuredArgs,\n    };\n};\n"]}
import { AnonymousSelectPattern, GuardFunction, GuardPattern, NamedSelectPattern, NotPattern, Pattern } from './types/Pattern';
export declare const when: <a, b extends a = never>(predicate: GuardFunction<a, b>) => GuardPattern<a, b>;
export declare const not: <a>(pattern: Pattern<a>) => NotPattern<a>;
export declare const ANONYMOUS_SELECT_KEY = "@ts-pattern/__anonymous-select-key";
export declare function select(): AnonymousSelectPattern;
export declare function select<k extends string>(key: k): NamedSelectPattern<k>;
declare type AnyConstructor = new (...args: any[]) => any;
export declare const instanceOf: <T extends AnyConstructor>(classConstructor: T) => GuardPattern<unknown, InstanceType<T>>;
export {};

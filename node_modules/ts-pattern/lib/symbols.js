"use strict";
/**
 * Symbols used internally within ts-pattern to construct and discriminate
 * Guard, Not, and Select, and AnonymousSelect patterns
 *
 * Symbols have the advantage of not appearing in auto-complete suggestions in
 * user defined patterns, and eliminate the admittedly unlikely risk of property
 * overlap between ts-pattern internals and user defined patterns.
 *
 * These symbols have to be visible to tsc for type inference to work, but
 * users should not import them
 * @module
 * @private
 * @internal
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnonymousSelect = exports.NamedSelect = exports.Not = exports.Guard = exports.PatternKind = void 0;
/** @internal This symbol should only be used by ts-pattern's internals. */
exports.PatternKind = Symbol('@ts-pattern/pattern-kind');
/** @internal This symbol should only be used by ts-pattern's internals. */
exports.Guard = Symbol('@ts-pattern/guard');
/** @internal This symbol should only be used by ts-pattern's internals. */
exports.Not = Symbol('@ts-pattern/not');
/** @internal This symbol should only be used by ts-pattern's internals. */
exports.NamedSelect = Symbol('@ts-pattern/named-select');
/** @internal This symbol should only be used by ts-pattern's internals. */
exports.AnonymousSelect = Symbol('@ts-pattern/anonymous-select');
